- name: Ensure Flatpak is installed
  package:
    name: flatpak
    state: present

- name: Verify Flathub repository is added
  command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
  args:
    creates: /var/lib/flatpak/repo/flathub

- name: Update Flatpak and repositories
  command: flatpak update
  register: flatpak_update
  ignore_errors: yes

- name: Install Flatpak applications
  command: flatpak install -y flathub "{{ item }}"
  loop:
    - com.discordapp.Discord
    - org.mozilla.firefox
    - org.gimp.GIMP
    - com.belmoussaoui.Authenticator
    - com.bitwarden.desktop
    - com.brave.Browser
    - com.github.IsmaelMartinez.teams_for_linux
    - com.github.PintaProject.Pinta
    - com.github.xournalpp.xournalpp
    - com.google.Chrome
    - com.microsoft.Edge
    - com.microsoft.EdgeDev
    - com.visualstudio.code
    - org.keepassxc.KeePassXC
    - org.nmap.Zenmap
  register: flatpak_install
  ignore_errors: yes

- name: Initialize failed_flatpak_apps variable
  set_fact:
    failed_flatpak_apps: []

- name: Collect failed Flatpak installations
  set_fact:
    failed_flatpak_apps: "{{ failed_flatpak_apps | default([]) + [item.item] }}"
  with_items: "{{ flatpak_install.results }}"
  when: item.failed and 'error' in item.msg

- name: Output failed Flatpak installations
  debug:
    msg: "Failed Flatpak applications: {{ failed_flatpak_apps | join(', ') }}"

- name: Uninstall Flatpak applications
  package:
    name: "{{ item }}"
    state: absent
  loop:
    - com.spotify.Client
    - uk.org.greenend.chiark.sgtatham.putty
